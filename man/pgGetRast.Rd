% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgGetRast.r
\name{pgGetRast}
\alias{pgGetRast}
\title{Load a raster stored in a PostgreSQL database into R.}
\usage{
pgGetRast(conn, table, rast = "rast", digits = 9, NSEW = c(NULL, NULL,
  NULL, NULL))
}
\arguments{
\item{conn}{A connection object to a PostgreSQL database}

\item{table}{A character string specifying a PostgreSQL schema (if necessary), 
and table or view name for the table holding the 
raster (e.g., table = c("schema","table"))}

\item{rast}{Name of the column in 'table' holding the raster object}

\item{digits}{numeric, precision for detecting whether points 
are on a regular grid (a low number of digits is a low precision) -
From rasterFromXYZ function (\code{raster} package)}

\item{NSEW}{numeric, clipping box for raster with four arguments
(north, south, east, west) indicating the projection-specific 
limits with which to clip the raster.}
}
\value{
RasterLayer
}
\description{
Retrieve rasters from a PostGIS table
}
\examples{
\dontrun{
library(RPostgreSQL)
drv<-dbDriver("PostgreSQL")
conn<-dbConnect(drv,dbname='dbname',host='host',port='5432',
               user='user',password='password')

pgGetRast(conn,c('schema','tablename'))
pgGetRast(conn,c('schema','DEM'),digits=9,
         NSEW=c(55,50,17,12))
}
}
\author{
David Bucklin \email{david.bucklin@gmail.com}
}

