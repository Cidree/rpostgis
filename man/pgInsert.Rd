% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgInsert.R
\name{pgInsert}
\alias{pgInsert}
\title{Inserts data from a pgInsertize* object into a PostgreSQL table}
\usage{
pgInsert(conn, table, pgi)
}
\arguments{
\item{conn}{A connection object to a PostgreSQL database}

\item{pgi}{A list of columns to insert to and the formatted insert data (an output object from pgInsertize() or pgInsertizeGeom())}

\item{name}{A character string specifying a PostgreSQL schema (if necessary), and table or view name for the table holding the lines geometry (e.g., name = c("schema","table"))}
}
\value{
DBIResult
}
\description{
Inserts data from a pgInsertize* object into a PostgreSQL table
}
\examples{

library(sp)
data(meuse)
coords <- SpatialPoints(meuse[, c("x", "y")])
spdf<- SpatialPointsDataFrame(coords, meuse)

#remove "." from column name
colnames(spdf@data)[colnames(spdf@data) == 'dist.m']<-"dist_m"

#format data for insert
pgi<-pgInsertizeGeom(spdf,geom="point")

\dontrun{

library(RPostgreSQL)
drv<-dbDriver("PostgreSQL")
conn<-dbConnect(drv,dbname='dbname',host='host',port='5432',
               user='user',password='password')

# insert data in database table (note that an error will be given if 
# all insert columns do not match exactly to database table columns)
pgInsert(conn,c("schema","meuse_data"),pgi=pgi)
}
}
\author{
David Bucklin \email{david.bucklin@gmail.com}
}

