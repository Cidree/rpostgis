% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgInsertizeGeom.r
\name{pgInsertizeGeom}
\alias{pgInsertizeGeom}
\title{Formats an R Spatial*DataFrame for insert (with geometry) into a PostgreSQL table (using pgInsert).}
\usage{
pgInsertizeGeom(sdf, db.na = "NULL", geom = "geom", multi = FALSE,
  force.match = NULL, conn = NULL)
}
\arguments{
\item{sdf}{A Spatial*DataFrame}

\item{db.na}{A character string, value to change NAs to (defaults to "NULL")}

\item{geom}{character string, the name of geometry column in the database table. (defaults to 'geom')}

\item{multi}{Logical, if PostGIS geometry column is of Multi* type set to TRUE}

\item{force.match}{character, schema and table of the PostgreSQL table to compare columns of data frame with 
If specified, only columns in the data frame that exactly match the database table will be kept, and reordered
to match the database table. If NULL, all columns will be kept in the same order given in the data frame.}

\item{conn}{A database connection (if a table is given in for "force.match" parameter)}
}
\value{
Character string which is suitable for pasting into a SQL INSERT statement for PostGIS spatial tables.
}
\description{
Formats an R Spatial*DataFrame for insert (with geometry) into a PostgreSQL table (using pgInsert).
}
\examples{

library(sp)
data(meuse)
coords <- SpatialPoints(meuse[, c("x", "y")])
spdf<- SpatialPointsDataFrame(coords, meuse)

#remove "." from column name
colnames(spdf@data)[colnames(spdf@data) == 'dist.m']<-"dist_m"

#format data for insert
pgi<-pgInsertizeGeom(spdf,geom="point")

\dontrun{

library(RPostgreSQL)
drv<-dbDriver("PostgreSQL")
conn<-dbConnect(drv,dbname='dbname',host='host',port='5432',
               user='user',password='password')

#insert data in database table (note that an error will be given if all insert columns do not match exactly to database table columns)
pgInsert(conn,c("schema","meuse_data"),pgi=pgi)
}
}
\author{
David Bucklin \email{david.bucklin@gmail.com}
}

