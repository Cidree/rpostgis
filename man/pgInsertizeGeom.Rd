% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgInsertizeGeom.r
\name{pgInsertizeGeom}
\alias{pgInsertizeGeom}
\alias{print.pgi}
\title{Formats an R Spatial*DataFrame for insert (with geometry) into a PostgreSQL table (for use with pgInsert).}
\usage{
pgInsertizeGeom(sdf, geom = "geom", multi = FALSE, force.match = NULL,
  conn = NULL)

\method{print}{pgi}(pgi)
}
\arguments{
\item{sdf}{A Spatial*DataFrame}

\item{geom}{character string, the name of geometry column in the database table. (defaults to 'geom')}

\item{multi}{Logical, if PostGIS geometry column is of Multi* type set to TRUE}

\item{force.match}{character, schema and table of the PostgreSQL table to compare columns of data frame with 
If specified, only columns in the data frame that exactly match the database table will be kept, and reordered
to match the database table. If NULL, all columns will be kept in the same order given in the data frame.}

\item{conn}{A database connection (if a table is given in for "force.match" parameter)}

\item{object}{A list of class \code{pgi}, output from the pgInsertize() or pgInsertizeGeom() functions from the rpostgis package.}
}
\value{
List containing two character strings- (1) db.cols.insert, a character string of the database column
names to make inserts on, and (2) insert.data, a character string of the data to insert. See examples for 
usage within the \code{pgInsert} function.
}
\description{
Formats an R Spatial*DataFrame for insert (with geometry) into a PostgreSQL table (for use with pgInsert).
}
\examples{

library(sp)
data(meuse)
coords <- SpatialPoints(meuse[, c("x", "y")])
spdf<- SpatialPointsDataFrame(coords, meuse)

#remove "." from column name
colnames(spdf@data)[colnames(spdf@data) == 'dist.m']<-"dist_m"

#format data for insert
pgi<-pgInsertizeGeom(spdf,geom="point_geom")

\dontrun{

library(RPostgreSQL)
drv<-dbDriver("PostgreSQL")
conn<-dbConnect(drv,dbname='dbname',host='host',port='5432',
               user='user',password='password')

# insert data in database table (note that an error will be given if all 
# insert columns do not match exactly to database table columns)
pgInsert(conn,c("schema","meuse_data"),pgi=pgi)
}
}
\author{
David Bucklin \email{david.bucklin@gmail.com}
}

