% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgGetPts.r
\name{pgGetPts}
\alias{pgGetPts}
\title{Retrieve point geometries}
\usage{
pgGetPts(conn, name, geom = "geom", gid = NULL, other.cols = "*",
  query = NULL)
}
\arguments{
\item{conn}{A connection object.}

\item{name}{A character string specifying a PostgreSQL table, view
or schema name.}

\item{geom}{The name of the point geometry column. (Default = 'geom')}

\item{gid}{Name of the column in 'table' holding the ID. Should be unique if additional columns of unique data are being appended. \code{gid=NULL} (default) automatically creates a new unique ID for each row in the table.}

\item{other.cols}{Names of columns in the table to retrieve, comma seperated in one character element (e.g. \code{other.cols="col1,col2"}. Default is to attach all columns in a SpatialPointsDataFrame, \code{other.cols=NULL] returns a SpatialPoints.}}
}
\value{
A Spatial(Multi)Points or a Spatial(Multi)PointsDataFrame
}
\description{
Retrieve point geometries from a PostGIS table, and convert it to
a SpatialPoints or a SpatialPointsDataFrame.
}
\examples{
\dontrun{
## Retrieve a SpatialPointsDataFrame with all data from table 'fla.bli', with geometry in the column 'geom'
pgGetPts(conn, c("fla", "bli"))
## Return a SpatialPointsDataFrame with columns c1 & c2 as data
pgGetPts(conn, c("fla", "bli"), other.cols = "c1,c2")
## Return a SpatialPoints, retaining id from table as rownames
pgGetPts(conn, c("fla", "bli"), gid = "bli_id", other.cols = FALSE)
}
}
\author{
David Bucklin \email{david.bucklin@gmail.com}
}

