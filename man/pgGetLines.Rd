% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pgGetLines.r
\name{pgGetLines}
\alias{pgGetLines}
\title{Load a linestring geometry stored in a PostgreSQL database into R.}
\usage{
pgGetLines(conn, table, geom = "geom", gid = NULL, other.cols = "*",
  query = NULL)
}
\arguments{
\item{conn}{A connection object created in RPostgreSQL package.}

\item{table}{character, Name of the schema-qualified table in 
Postgresql holding the geometry.}

\item{geom}{character, Name of the column in 'table' holding
the geometry object (Default = 'geom')}

\item{gid}{character, Name of the column in 'table' holding 
the ID for each line. Should be unique if additional columns of 
unique data are being appended. (Default = 'gid')}

\item{other.cols}{character, names of additional columns from 
table (comma-seperated) to append to dataset (Default is all 
columns, NULL returns a SpatialLines object)}

\item{query}{character, additional SQL to append to modify 
select query from table}
}
\value{
SpatialLinesDataFrame or SpatialLines
}
\examples{
\dontrun{
library(RPostgreSQL)
drv<-dbDriver("PostgreSQL")
conn<-dbConnect(drv,dbname='dbname',host='host',port='5432',
               user='user',password='password')

pgGetLines(conn,'schema.tablename')
pgGetLines(conn,'schema.roads',geom='roadgeom',gid='road_ID',
           other.cols=NULL, query = "AND field = \\'highway\\'")
}
}
\author{
David Bucklin \email{david.bucklin@gmail.com}
}

